#define _CRT_SECURE_NO_WARNINGS
 
#define MAX_LEN 100
 
#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <malloc.h>
#include <string.h>
 
int get_int(const char* msg) {
    int number;
    printf("%s", msg);
    while (scanf("%d", &number) != 1 || getchar() != '\n') {
        printf("Ошибка!\n");
        rewind(stdin);
        printf("%s", msg);
    }
 
    return number;
}
 
int get_count_words(char* s) {
    int i, word, is_blank;
    i = 0;
    word = 1;
    is_blank = 1;
 
    while (s[i] != '\0')
    {
        if (s[i] == '1' || s[i] == '0' || s[i] == '2' || s[i] == '3' || s[i] == '4' || s[i] == '5' || s[i] == '6' || s[i] == '7' || s[i] == '8' || s[i] == '9') {
            i += 2;
            word--;
        }
        else {
            if (s[i] == ' ')
            {
                word++;
            }
            else {
                printf("%c", s[i]);
                is_blank = 0;
            }
 
            i++;
        }
    }
    if (is_blank == 1) return 0;
    return word;
}
char* duplicate_char(char* s)
{
    char c;
    printf("Введите символ для удвоения: ");
    scanf("%c", &c);
 
    size_t n = 0;
 
    for (const char* p = s; *p; ++p)
    {
        if (*p == c) ++n;
    }
 
    char* nouvelle = malloc(strlen(s) + n + 1);
 
    if (nouvelle)
    {
        if (n == 0)
        {
            strcpy(nouvelle, s);
        }
        else
        {
            char* p = nouvelle;
 
            while (*s)
            {
                *p++ = *s++;
 
                if (p[-1] == c) *p++ = c;
            }
 
            *p = '\0';
        }
    }
 
    return nouvelle;
}
 
void main() {
    setlocale(LC_ALL, "rus");
 
    int option = get_int("Выберите один из пунктов\n------------------------\n1 - найти количество слов в строке\n2 - удвоить вхождение символа в строке\n\nВыберите пункт: ");
 
    switch (option)
    {
        case 1:
            printf("Введите строку: ");
            int (*count_words)(char*) = NULL;
            count_words = get_count_words;
            int result;
 
            char* string = (char*)malloc(MAX_LEN * sizeof(char));
 
            fgets(string, sizeof string, stdin);
 
            result = count_words(string);
            printf("Количество слов в строке - %d\n", result);
 
            break;
        case 2:
            printf("Введите строку: ");
            char* (*duplicate)(char*) = NULL;
            duplicate = duplicate_char;
            char* result2;
 
            char* string2 = (char*)malloc(MAX_LEN * sizeof(char));
 
            fgets(string2, sizeof string2, stdin);
 
            result2 = duplicate(string2);
            printf("Измененная строка - %s\n", result2);
 
            break;
    default:
        printf("Такого варианта нет");
    }
 
    system("pause");
}
